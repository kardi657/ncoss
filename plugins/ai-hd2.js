(function (_0x2ad743, _0x160280) {
    const _0x3b30fc = _0x4519,
        _0x84bf4d = _0x2ad743();
    while (!![]) {
        try {
            const _0x429b9b = parseInt(_0x3b30fc(0x11d)) / (0x90c + 0x1 * -0x26c + -0x69f) * (-parseInt(_0x3b30fc(0x12b)) / (-0x2613 + -0x1 * -0x1d39 + -0x15 * -0x6c)) + -parseInt(_0x3b30fc(0x13e)) / (-0x1 * 0xc8d + -0xfec + 0x1c7c) * (-parseInt(_0x3b30fc(0xd0)) / (-0xd * -0x200 + -0x240e + 0xa12)) + parseInt(_0x3b30fc(0xef)) / (-0x610 + -0xc11 + 0x1226) + parseInt(_0x3b30fc(0xd5)) / (-0x203d + -0x118b + 0x31ce) * (-parseInt(_0x3b30fc(0x13d)) / (-0x2582 + -0x16f * 0x10 + 0x3c79)) + parseInt(_0x3b30fc(0xd3)) / (-0x58f + 0x4bd * 0x3 + -0x8a0) * (parseInt(_0x3b30fc(0x10e)) / (-0x175e + 0x15e2 + 0x185)) + parseInt(_0x3b30fc(0x10b)) / (0x12aa + -0x1f37 + 0xc97) + parseInt(_0x3b30fc(0x131)) / (-0x17b3 + 0x106b * 0x2 + -0x3 * 0x308);
            if (_0x429b9b === _0x160280) break;
            else _0x84bf4d['push'](_0x84bf4d['shift']());
        } catch (_0x48f6cc) {
            _0x84bf4d['push'](_0x84bf4d['shift']());
        }
    }
}(_0x241b, 0x33e73 + -0x9dc06 + 0x129adf));
import _0x1cfa26 from 'axios';
import _0x123a80 from 'form-data';
function _0x241b() {
    const _0xe17bfb = ['.jpg', '7920441CRuDHl', 'puvCg', 'command .h', 'com/', 'ko) Chrome', 'Upload fai', 'wgpgE', 'NBdew', 'error', 'fari/537.3', 'RiVbl', 'com', 'data', 'n/json', '/138.0.0.0', '2FAHaAE', 'ar dengan ', 'xt/plain, ', 'aoqIb', ' server', '0 (Linux; ', 'atusNew', 'now', 'append', '.36 (KHTML', 'success', 'includes', 'pCjni', 'quoted', '1476518ibFsLT', 'reply gamb', 'nJEXV', 'sZMZc', ' Mobile Sa', 'https://ge', '8597072asZLml', 'vCruC', 'aQJiV', 'eUeYw', 'Stream', 'mpcYb', 'RyAmA', ' timeout -', 'mimetype', 'VmSQr', 'ew/CheckSt', 'zenn?_', '2478CsZnmY', '39vAPadW', '; K) Apple', 'etries exc', 'downloadUr', 'led : ', 'KyPCZ', 'cwd', 'myfile', 'scaleRadio', 'chat', 'tjxgz', ' maximum r', '.hd 4x', 'er.com/api', 'wnkek', 'sendFile', 'bPEVY', 'applicatio', 'ew/UploadN', '5772tfaGbd', 'stringify', 'OdfLu', '8qniVab', 'IhlaE', '10278EaoLHl', 'req', 'lusi : 2x ', 'gupscaler.', 'message', 'download', 'code', 'test', 'replace', ', like Gec', 'length', 'WebKit/537', 'reply', 'join', 'Mozilla/5.', 'https://im', 'Processing', 'ync', 'VaYGN', 'status', 'writeFileS', 'toString', 'DlSvb', 'Eror kak :', 'getHeaders', 'upscale', '308285IcyFfr', 'eHxBJ', 'unlinkSync', ' failed on', 't1.imglarg', 'wYsGg', 'eeded', 'atau 4x', 'Android 10', 'createRead', '*/*', 'wait', 'ICttQ', 'BSkCR', '/UpscalerN', 'POST', 'KFbid', 'iIsZb', 'cek', 'GaCPY', 'gagal upsc', 'jenzxz.png', 'd 2x atau ', 'msg', 'pilih reso', 'n/json, te', 'cDzZI', 'request', '11266430AAvOpg', 'ale'];
    _0x241b = function () {
        return _0xe17bfb;
    };
    return _0x241b();
}
function _0x4519(_0x36941f, _0x20d2ad) {
    const _0x20a0bf = _0x241b();
    return _0x4519 = function (_0x576a46, _0x5ecae9) {
        _0x576a46 = _0x576a46 - (-0x290 + -0x71 * 0x35 + -0x146 * -0x15);
        let _0xf83ce3 = _0x20a0bf[_0x576a46];
        return _0xf83ce3;
    }, _0x4519(_0x36941f, _0x20d2ad);
}
import _0x22d4c8 from 'fs';
import _0x7f2606 from 'path';
const availableScaleRatio = [0x19eb * -0x1 + 0x2a6 * 0x8 + 0x4bd * 0x1, -0x7 * -0x35f + -0x752 + -0x1 * 0x1043],
    imgupscale = {
        'req': async (_0x3d3214, _0x288dff) => {
            const _0x39b957 = _0x4519,
                _0x47fce1 = {
                    'vCruC': _0x39b957(0x145),
                    'RyAmA': _0x39b957(0x146),
                    'pCjni': _0x39b957(0xfe),
                    'mpcYb': _0x39b957(0x130) + _0x39b957(0xf3) + _0x39b957(0xca) + _0x39b957(0xfd) + _0x39b957(0xcf) + 'ew',
                    'cDzZI': _0x39b957(0xe3) + _0x39b957(0x122) + _0x39b957(0xf7) + _0x39b957(0x13f) + _0x39b957(0xe0) + _0x39b957(0x126) + _0x39b957(0xde) + _0x39b957(0x112) + _0x39b957(0x11c) + _0x39b957(0x12f) + _0x39b957(0x117) + '6',
                    'tjxgz': _0x39b957(0xce) + _0x39b957(0x108) + _0x39b957(0x11f) + _0x39b957(0xf9),
                    'VaYGN': _0x39b957(0xe4) + _0x39b957(0xd8) + _0x39b957(0x119),
                    'RiVbl': _0x39b957(0xe4) + _0x39b957(0xd8) + _0x39b957(0x111)
                },
                _0x28637b = new _0x123a80();
            _0x28637b[_0x39b957(0x125)](_0x47fce1[_0x39b957(0x132)], _0x22d4c8[_0x39b957(0xf8) + _0x39b957(0x135)](_0x3d3214)), _0x28637b[_0x39b957(0x125)](_0x47fce1[_0x39b957(0x137)], _0x288dff[_0x39b957(0xea)]());
            const _0x242c69 = await _0x1cfa26[_0x39b957(0x10a)]({
                'method': _0x47fce1[_0x39b957(0x129)],
                'url': _0x47fce1[_0x39b957(0x136)],
                'headers': {
                    'User-Agent': _0x47fce1[_0x39b957(0x109)],
                    'Accept': _0x47fce1[_0x39b957(0x148)],
                    'origin': _0x47fce1[_0x39b957(0xe7)],
                    'referer': _0x47fce1[_0x39b957(0x118)],
                    ..._0x28637b[_0x39b957(0xed)]()
                },
                'data': _0x28637b
            });
            return _0x242c69[_0x39b957(0x11a)];
        },
        'cek': async (_0x511e91, _0x42da7f) => {
            const _0x2b9b4b = _0x4519,
                _0x2979c0 = {
                    'DlSvb': _0x2b9b4b(0xfe),
                    'wYsGg': _0x2b9b4b(0x130) + _0x2b9b4b(0xf3) + _0x2b9b4b(0xca) + _0x2b9b4b(0xfd) + _0x2b9b4b(0x13b) + _0x2b9b4b(0x123),
                    'ICttQ': _0x2b9b4b(0xe3) + _0x2b9b4b(0x122) + _0x2b9b4b(0xf7) + _0x2b9b4b(0x13f) + _0x2b9b4b(0xe0) + _0x2b9b4b(0x126) + _0x2b9b4b(0xde) + _0x2b9b4b(0x112) + _0x2b9b4b(0x11c) + _0x2b9b4b(0x12f) + _0x2b9b4b(0x117) + '6',
                    'eHxBJ': _0x2b9b4b(0xce) + _0x2b9b4b(0x108) + _0x2b9b4b(0x11f) + _0x2b9b4b(0xf9),
                    'nJEXV': _0x2b9b4b(0xce) + _0x2b9b4b(0x11b),
                    'VmSQr': _0x2b9b4b(0xe4) + _0x2b9b4b(0xd8) + _0x2b9b4b(0x119),
                    'iIsZb': _0x2b9b4b(0xe4) + _0x2b9b4b(0xd8) + _0x2b9b4b(0x111)
                },
                _0x117693 = await _0x1cfa26[_0x2b9b4b(0x10a)]({
                    'method': _0x2979c0[_0x2b9b4b(0xeb)],
                    'url': _0x2979c0[_0x2b9b4b(0xf4)],
                    'headers': {
                        'User-Agent': _0x2979c0[_0x2b9b4b(0xfb)],
                        'Accept': _0x2979c0[_0x2b9b4b(0xf0)],
                        'Content-Type': _0x2979c0[_0x2b9b4b(0x12d)],
                        'origin': _0x2979c0[_0x2b9b4b(0x13a)],
                        'referer': _0x2979c0[_0x2b9b4b(0x100)]
                    },
                    'data': JSON[_0x2b9b4b(0xd1)]({
                        'code': _0x511e91,
                        'scaleRadio': _0x42da7f
                    })
                });
            return _0x117693[_0x2b9b4b(0x11a)];
        },
        'upscale': async (_0x561485, _0x33e1c9, _0x2124ec = 0x1 * 0x1ce2 + -0x20e7 * 0x1 + 0x423, _0x36557b = 0x1 * 0x165a + 0x1e8b * -0x1 + 0x11 * 0xf1) => {
            const _0xd7a69d = _0x4519,
                _0x541c85 = {
                    'wgpgE': function (_0x2b5ab6, _0x334ffb) {
                        return _0x2b5ab6 !== _0x334ffb;
                    },
                    'eUeYw': function (_0x4c32ca, _0x591841) {
                        return _0x4c32ca < _0x591841;
                    },
                    'KFbid': function (_0x362c68, _0x42529d) {
                        return _0x362c68 === _0x42529d;
                    },
                    'IhlaE': function (_0x1b714a, _0x3a2e27) {
                        return _0x1b714a === _0x3a2e27;
                    },
                    'bPEVY': _0xd7a69d(0x127),
                    'GaCPY': function (_0x8e96c6, _0x33ac16) {
                        return _0x8e96c6 === _0x33ac16;
                    },
                    'puvCg': _0xd7a69d(0x116),
                    'wnkek': _0xd7a69d(0xe5) + _0xd7a69d(0xf2) + _0xd7a69d(0x121),
                    'KyPCZ': _0xd7a69d(0xe5) + _0xd7a69d(0x138) + _0xd7a69d(0x149) + _0xd7a69d(0x140) + _0xd7a69d(0xf5)
                },
                _0x1a3e62 = await imgupscale[_0xd7a69d(0xd6)](_0x561485, _0x33e1c9);
            if (_0x541c85[_0xd7a69d(0x114)](_0x1a3e62[_0xd7a69d(0xdb)], -0x1 * -0x117b + 0xb9f + -0x1d * 0xfa)) throw new Error(_0xd7a69d(0x113) + _0xd7a69d(0x142) + _0x1a3e62[_0xd7a69d(0x106)]);
            const {
                code: _0x47ed68
            } = _0x1a3e62[_0xd7a69d(0x11a)];
            for (let _0x235311 = -0x12c6 + -0x2 * 0xfbb + 0x283 * 0x14; _0x541c85[_0xd7a69d(0x134)](_0x235311, _0x2124ec); _0x235311++) {
                const _0x1426b2 = await imgupscale[_0xd7a69d(0x101)](_0x47ed68, _0x33e1c9);
                if (_0x541c85[_0xd7a69d(0xff)](_0x1426b2[_0xd7a69d(0xdb)], -0x142 * -0x11 + 0xb3 * 0x35 + -0x39a9) && _0x541c85[_0xd7a69d(0xd4)](_0x1426b2[_0xd7a69d(0x11a)][_0xd7a69d(0xe8)], _0x541c85[_0xd7a69d(0xcd)])) return {
                    'success': !![],
                    'downloadUrls': _0x1426b2[_0xd7a69d(0x11a)][_0xd7a69d(0x141) + 'ls']
                };
                if (_0x541c85[_0xd7a69d(0x102)](_0x1426b2[_0xd7a69d(0x11a)][_0xd7a69d(0xe8)], _0x541c85[_0xd7a69d(0x10f)])) throw new Error(_0x541c85[_0xd7a69d(0xcb)]);
                await new Promise(_0x21f42c => setTimeout(_0x21f42c, _0x36557b));
            }
            throw new Error(_0x541c85[_0xd7a69d(0x143)]);
        }
    },
    handler = async (_0x494e49, {
        conn: _0x2b1c27,
        args: _0x4e2f22
    }) => {
        const _0x237e61 = _0x4519,
            _0x12d037 = {
                'aQJiV': _0x237e61(0x12c) + _0x237e61(0x11e) + _0x237e61(0x110) + _0x237e61(0x105) + _0x237e61(0xc9),
                'OdfLu': function (_0x44e247, _0x3b8282) {
                    return _0x44e247(_0x3b8282);
                },
                'aoqIb': _0x237e61(0x107) + _0x237e61(0xd7) + _0x237e61(0xf6),
                'sZMZc': _0x237e61(0xfa),
                'NBdew': _0x237e61(0x103) + _0x237e61(0x10c),
                'BSkCR': _0x237e61(0x104)
            };
        if (!_0x494e49[_0x237e61(0x12a)] || !/image/ [_0x237e61(0xdc)](_0x494e49[_0x237e61(0x12a)][_0x237e61(0x139)] || '')) return _0x494e49[_0x237e61(0xe1)](_0x12d037[_0x237e61(0x133)]);
        const _0x59c13b = _0x4e2f22[-0xe32 + 0x2 * -0x9ad + 0x218c]?. [_0x237e61(0xdd)](/x/i, '') || '2';
        if (!availableScaleRatio[_0x237e61(0x128)](_0x12d037[_0x237e61(0xd2)](Number, _0x59c13b))) return _0x494e49[_0x237e61(0xe1)](_0x12d037[_0x237e61(0x120)]);
        try {
            _0x494e49[_0x237e61(0xe1)](_0x12d037[_0x237e61(0x12e)]);
            const _0x2020e0 = await _0x494e49[_0x237e61(0x12a)][_0x237e61(0xda)](),
                _0x1b9e4d = _0x7f2606[_0x237e61(0xe2)](process[_0x237e61(0x144)](), _0x237e61(0x13c) + Date[_0x237e61(0x124)]() + _0x237e61(0x10d));
            _0x22d4c8[_0x237e61(0xe9) + _0x237e61(0xe6)](_0x1b9e4d, _0x2020e0);
            const _0x5aa906 = await imgupscale[_0x237e61(0xee)](_0x1b9e4d, _0x12d037[_0x237e61(0xd2)](Number, _0x59c13b));
            _0x22d4c8[_0x237e61(0xf1)](_0x1b9e4d);
            if (!_0x5aa906[_0x237e61(0x127)] || !_0x5aa906[_0x237e61(0x141) + 'ls']?. [_0x237e61(0xdf)]) throw new Error(_0x12d037[_0x237e61(0x115)]);
            await _0x2b1c27[_0x237e61(0xcc)](_0x494e49[_0x237e61(0x147)], _0x5aa906[_0x237e61(0x141) + 'ls'][0x1312 + -0x4e9 + 0xe29 * -0x1], _0x12d037[_0x237e61(0xfc)], '', _0x494e49);
        } catch (_0x2fa152) {
            _0x494e49[_0x237e61(0xe1)](_0x237e61(0xec) + ' ' + _0x2fa152[_0x237e61(0xd9)]);
        }
    };
    
handler.help = ['hd2'];
handler.tags = ['ai'];
handler.command = /^(hd2)$/i;
handler.limit = true;
export default handler;
