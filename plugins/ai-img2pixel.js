(function (_0x57c6d3, _0x302f2b) {
    const _0x35a859 = _0x1557,
        _0x4ea59e = _0x57c6d3();
    while (!![]) {
        try {
            const _0x2d0969 = parseInt(_0x35a859(0x20e)) / (0x6ad + -0x343 + -0x3 * 0x123) * (parseInt(_0x35a859(0x1fa)) / (-0xb56 + 0x195b * 0x1 + -0x1 * 0xe03)) + parseInt(_0x35a859(0x1ec)) / (-0x221f * 0x1 + -0xb * -0x13d + -0x1483 * -0x1) * (-parseInt(_0x35a859(0x1e6)) / (0xddc * 0x1 + 0xd6a + -0x1b42)) + parseInt(_0x35a859(0x1ef)) / (0x2 * -0x136c + 0x2579 * -0x1 + 0x2 * 0x262b) * (parseInt(_0x35a859(0x1fc)) / (0x2fd + -0x1242 + 0x87 * 0x1d)) + -parseInt(_0x35a859(0x1f3)) / (-0x12 * 0x1fb + -0x13bb + -0x3768 * -0x1) + -parseInt(_0x35a859(0x202)) / (0x1607 * 0x1 + -0x9c6 + -0x1 * 0xc39) + parseInt(_0x35a859(0x212)) / (0x8fa + -0xf5b + 0x335 * 0x2) * (-parseInt(_0x35a859(0x1f4)) / (-0x1ce * 0x5 + -0x2 * 0x69b + 0x1646)) + parseInt(_0x35a859(0x20f)) / (-0x1 * 0x1029 + -0xf16 + 0x1f4a);
            if (_0x2d0969 === _0x302f2b) break;
            else _0x4ea59e['push'](_0x4ea59e['shift']());
        } catch (_0x2d3e52) {
            _0x4ea59e['push'](_0x4ea59e['shift']());
        }
    }
}(_0x35a4, -0x5e2c0 + -0x1570d * 0x1 + 0x4 * 0x341d8));
function _0x35a4() {
    const _0x195cda = ['REST_NEIGH', 'rnya', '134367upbTJK', '15951661grMVUP', 'reply', 'RESIZE_NEA', '9tvNTin', '44dhZMMg', 'BOR', 'message', 'width', 'Mana gamba', 'read', '139128ZVpIgO', 'startsWith', 'e : ', '305VcPzvB', 'image/', 'juWmV', 'Wait...', '2915885hTNeAg', '5886670bKNVPa', 'sendMessag', 'wETje', 'QsRgy', 'getBufferA', 'MIME_JPEG', '6XzraOk', 'DyfVC', '58932YkRJKE', 'download', 'height', 'resize', 'bitmap', 'cqgDf', '4453832ZWdWdo', 'sync', 'chat', 'clone', 'CfiNI', 'quoted', 'Pixelated ', 'mimetype', 'msg', 'image (siz'];
    _0x35a4 = function () {
        return _0x195cda;
    };
    return _0x35a4();
}
function _0x1557(_0x489483, _0x46fc78) {
    const _0x36cc01 = _0x35a4();
    return _0x1557 = function (_0x5950e3, _0x15e512) {
        _0x5950e3 = _0x5950e3 - (-0xbf * -0x6 + -0x50 * 0x3c + 0x3c * 0x45);
        let _0x3dde6a = _0x36cc01[_0x5950e3];
        return _0x3dde6a;
    }, _0x1557(_0x489483, _0x46fc78);
}
import {
    Jimp
} from 'jimp';
let handler = async (_0x4e7efc, {
    conn: _0x25bb40,
    args: _0x58f8d5
}) => {
    const _0xdf2928 = _0x1557,
        _0xab26a5 = {
            'DyfVC': _0xdf2928(0x1f0),
            'cqgDf': _0xdf2928(0x1ea) + _0xdf2928(0x20d),
            'QsRgy': function (_0x32d2ed, _0x2d6588) {
                return _0x32d2ed(_0x2d6588);
            },
            'juWmV': function (_0x249f1f, _0x316a55) {
                return _0x249f1f < _0x316a55;
            },
            'wETje': function (_0x2afdf4, _0x3ef31a) {
                return _0x2afdf4 > _0x3ef31a;
            },
            'CfiNI': _0xdf2928(0x1f2)
        },
        _0xc9a9a3 = _0x4e7efc[_0xdf2928(0x207)] ? _0x4e7efc[_0xdf2928(0x207)] : _0x4e7efc,
        _0x1f3738 = (_0xc9a9a3[_0xdf2928(0x20a)] || _0xc9a9a3)[_0xdf2928(0x209)] || '';
    if (!_0x1f3738[_0xdf2928(0x1ed)](_0xab26a5[_0xdf2928(0x1fb)])) return _0x4e7efc[_0xdf2928(0x210)](_0xab26a5[_0xdf2928(0x201)]);
    let _0xc6b0ab = _0xab26a5[_0xdf2928(0x1f7)](parseInt, _0x58f8d5[-0x1208 * 0x1 + -0x18eb * -0x1 + -0x6e3]) || -0x898 + -0x1223 + 0x1adb * 0x1;
    if (_0xab26a5[_0xdf2928(0x1f1)](_0xc6b0ab, -0x13b6 + -0x203a + 0x33f8)) _0xc6b0ab = -0x154 + -0x2220 + 0xbd4 * 0x3;
    if (_0xab26a5[_0xdf2928(0x1f6)](_0xc6b0ab, 0x1b42 * 0x1 + -0x1816 * 0x1 + 0xd4)) _0xc6b0ab = 0x6ee * -0x1 + 0x13be + -0x8d0;
    _0x4e7efc[_0xdf2928(0x210)](_0xab26a5[_0xdf2928(0x206)]);
    const _0x2be69b = await _0xc9a9a3[_0xdf2928(0x1fd)]();
    try {
        const _0x149306 = await Jimp[_0xdf2928(0x1eb)](_0x2be69b),
            _0xa32085 = _0x149306[_0xdf2928(0x205)]()[_0xdf2928(0x1ff)](_0xc6b0ab, _0xc6b0ab, Jimp[_0xdf2928(0x211) + _0xdf2928(0x20c) + _0xdf2928(0x1e7)]),
            _0x414d3a = _0xa32085[_0xdf2928(0x1ff)](_0x149306[_0xdf2928(0x200)][_0xdf2928(0x1e9)], _0x149306[_0xdf2928(0x200)][_0xdf2928(0x1fe)], Jimp[_0xdf2928(0x211) + _0xdf2928(0x20c) + _0xdf2928(0x1e7)]),
            _0x59c3c1 = await _0x414d3a[_0xdf2928(0x1f8) + _0xdf2928(0x203)](Jimp[_0xdf2928(0x1f9)]);
        await _0x25bb40[_0xdf2928(0x1f5) + 'e'](_0x4e7efc[_0xdf2928(0x204)], {
            'image': _0x59c3c1,
            'caption': _0xdf2928(0x208) + _0xdf2928(0x20b) + _0xdf2928(0x1ee) + _0xc6b0ab + ')'
        }, {
            'quoted': _0x4e7efc
        });
    } catch (_0x1dacba) {
        _0x4e7efc[_0xdf2928(0x210)](_0x1dacba[_0xdf2928(0x1e8)]);
    }
};

handler.help = ['img2pixel']
handler.tags = ['ai']
handler.command = ['img2pixel']

export default handler